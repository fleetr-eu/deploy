version: '2'

services:
  proxy:
    image: abiosoft/caddy:0.9.5
    volumes:
      - ./Caddyfile:/etc/Caddyfile
      - ./.caddy:/root/.caddy
    restart: unless-stopped
    hostname: caddy
    ports:
      - "80:80"
      - "443:443"

  www:
    image: fleetr/web
    restart: unless-stopped
    environment:
     - ROOT_URL=https://fleetr.eu
     - MONGO_URL=mongodb://mongo:27017/admin
     - MONGO_OPLOG_URL=mongodb://mongo:27017/local?authSource=admin
     - MAIL_URL=smtp://no-reply%40fleetr.eu:Z5fLfOmW3oeU@mail.fleetr.eu:465
     - 'METEOR_SETTINGS={"mqttUrl" : "mqtt://mqtt:1883", "mqttClientId": "fleetr@prod"}'

  traccar:
    image: fleetr/traccar
    restart: unless-stopped
    hostname: traccar
    depends_on:
      - db
      - mqtt
    ports:
      - "5055:5055"
      - "5027:5027"

  db:
    image: postgres:9
    restart: unless-stopped
    hostname: db
    environment:
      POSTGRES_DB: traccar
      POSTGRES_USER: traccar
      POSTGRES_PASSWORD: traccar@fleetr
    volumes:
      - /data/traccar/postgres/data:/var/lib/postgresql/data

  mqtt:
    image: greyarch/mosquitto
    restart: unless-stopped
    hostname: mqtt

  mongo:
    image: mongo:3
    restart: unless-stopped
    hostname: mongo
    command: --replSet rs0
    volumes:
      - /data/fleetr/mongo/data:/data/db

  processor:
    image: fleetr/processor
    restart: unless-stopped
    hostname: processor
    depends_on:
      - mongo
      - mqtt

  nominatim:
    image: fleetr/nominatim
    restart: unless-stopped
    hostname: nominatim

  pgweb:
    image: donnex/pgweb
    restart: unless-stopped
    hostname: pgweb

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    hostname: mongo-express
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: 'mongo'
      ME_CONFIG_BASICAUTH_PASSWORD: 'mongo@fleetr'

  logentries:
    image: logentries/docker-logentries
    restart: unless-stopped
    hostname: logentries
    command: -t c7b42a8f-c6a8-41eb-a3a6-3d9b59a2484a -j --no-stats --skipByName log.*
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  default:
    driver: bridge
